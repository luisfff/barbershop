name: BarberShop CI/CD

on:
  push:
    branches: [ main ]

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    env:
      rabbitmq_default_user: guest
      rabbitmq_default_pass: guest
    ports:
      # AMQP protocol port
      - 5672:5672
      # HTTP management UI
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "node_health_check"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /var/lib/rabbitmq:/var/lib/rabbitmq
    networks:
      barbershop_net:
        aliases:
          - rabbitmq

  cache:
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache:/data
    networks:
      barbershop_net:
        aliases:
          - cache

  api:
    build:
      context: .
      dockerfile: BarberShop.Api/Dockerfile
    image: barbershop-api
    ports:
      - 502:80
      - 5002:443
    depends_on:
      - rabbitmq
      - cache
    networks:
      barbershop_net:
        aliases:
          - api

  worker:
    build:
      context: .
      dockerfile: BarberShopWorker/Dockerfile
    image: barbershop-worker
    command: >
      /bin/sh -c "/bin/sleep 20 && /prog \"first argument\""
    depends_on:
      - rabbitmq
    networks:
      barbershop_net:
        aliases:
          - worker

volumes:
  cache:

networks:
  barbershop_net:
    driver: bridge

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build API Docker Image
        run: docker build -t barbershop-api ./BarberShop.Api

      - name: Build Worker Docker Image
        run: docker build -t barbershop-worker ./BarberShopWorker

      - name: Start Services
        run: docker-compose up -d

      - name: Run Tests
        run: docker-compose exec api dotnet test

      - name: Stop Services
        run: docker-compose down
